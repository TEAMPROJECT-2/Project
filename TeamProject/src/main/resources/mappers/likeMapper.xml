<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itwillbs.mappers.likeMapper">
	
	<!-- <insert id="insertLike" >
		insert into BOARD_LIKE
		(	
		    BOARD_NUM
		   ,USER_ID
		   ,LIKECHECK
		   )
		values(
		    #{boardNum}
		   ,#{userId}
		   ,#{likeCheck}
		   )
	</insert>
	
	<select id="isnertCount" resultType="java.lang.Integer">
		SELECT count(*) FROM BOARD_LIKE WHERE BOARD_NUM=#{boardNum} and USER_ID=#{userId}
	</select>
	
	<delete id="deleteLike">
		delete from BOARD_LIKE where USER_ID=#{userId}
	</delete>  -->
	
	
	

	<!-- 게시글 추천수 -->
	<update id="updateLike" parameterType="int">
	update BOARD set 
	BOARD_LIKECOUNT = BOARD_LIKECOUNT+1
	where BOARD_NUM = #{boardNum}
	</update>
	
	<!-- 게시글 추천수취소 -->
	<update id="updateLikeCancel" parameterType="int">
	update BOARD set 
	BOARD_LIKECOUNT = BOARD_LIKECOUNT - 1
	where BOARD_NUM = #{boardNum}
	</update>
	
	<!-- 게시글 추천 시 Like 테이블에 insert -->
	<insert id="insertLike">
	insert into BOARD_LIKE(LIKE_NUM , BOARD_NUM , USER_ID) 
	values(#{likeNum} ,#{boardNum} ,#{userId})
	</insert>
	
	<!-- 게시글 추천취소 시 delete -->
	<delete id="deleteLike">
	delete from BOARD_LIKE where BOARD_NUM = #{boardNum} and USER_ID = #{userId}
	</delete>
	
	<!-- 게시글 추천 시 Check를 1로 만들어서 중복방지-->
	<update id="updateLikeCheck">
	update BOARD_LIKE set LIKECHECK = 1
	where BOARD_NUM = #{boardNum} and USER_ID = #{userId}
	</update>
	
	<!-- 게시글 추천취소 시 다시 0  -->
	<update id="updateLikeCheckCancel">
	update BOARD_LIKE set LIKECHECK = 0
	where BOARD_NUM = #{boardNum} and USER_ID = #{userId}
	</update>
	
	<!-- 게시글 추천 중복방지 select문 -->
	<select id="likeCheck" resultType="com.itwillbs.domain.LikeDTO">
	select count(*) from BOARD_LIKE where BOARD_NUM = #{boardNum} and USER_ID = #{userId} 
	</select>
	
	<select id="likeMaxNum" resultType="java.lang.Integer">
		SELECT MAX(LIKE_NUM) FROM BOARD_LIKE where BOARD_NUM = #{boardNum} and USER_ID = #{userId} 
	</select>
	
	<!-- 게시글 추천 시 회원포인트 증가 -->
	<!-- <update id="memberPointPlus">
	update MP_MEMBER set MEMBER_POINT = MEMBER_POINT + 1 where MEMBER_ID = #{writerId}
	</update>
 -->	
	<!-- 게시글 추천취소 시 회원포인트 감소 -->
<!-- 	<update id="memberPointDown">
	update MP_MEMBER set MEMBER_POINT = MEMBER_POINT - 1 where MEMBER_ID = #{writerId}
	</update> -->
		
	
	
	
	
	
	
	
</mapper>